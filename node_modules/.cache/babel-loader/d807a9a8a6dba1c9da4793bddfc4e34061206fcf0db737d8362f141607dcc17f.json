{"ast":null,"code":"import React,{useState}from\"react\";//import { useNavigate } from \"react-router-dom\"\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export const AddGenre=props=>{//const navigate = useNavigate();\nconst[genre,setGenre]=useState('');const[error,setError]=useState('');const handleSubmit=e=>{e.preventDefault();setError(null);let success=true;let errorText='';const payload=JSON.stringify({genre:genre});try{fetch('http://localhost:8000/genre/',{method:'POST',body:payload,headers:{'Content-Type':'application/json'}}).then(res=>{console.log(res);if(!res.ok){errorText=\"Error: \"+res.status+' - ';success=false;return res.json();}else{success=true;return res.json();}}).then(data=>{if(!success){for(const err in data.errors){for(const msg in data.errors[err])errorText+=data.errors[err][msg];}console.log(errorText);setError(errorText);}}).catch(error=>{success=false;console.error(error);});if(success){setGenre('');setError('Genre Added!');}else{setError(errorText);}}catch(error){console.error(error);setError('Error Adding Genre - Check Yo Info!');}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Add Genre\"}),/*#__PURE__*/_jsxs(\"form\",{className:\"register-form\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"genre\",children:\"Genre\"}),/*#__PURE__*/_jsx(\"input\",{required:true,value:genre,onChange:e=>setGenre(e.target.value),type:\"text\",placeholder:\"i.e. Action, Comedy\",id:\"genre\",name:\"genre\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Submit\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-success\",children:/*#__PURE__*/_jsx(\"b\",{children:error})})]})]});};export default AddGenre;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","AddGenre","props","genre","setGenre","error","setError","handleSubmit","e","preventDefault","success","errorText","payload","JSON","stringify","fetch","method","body","headers","then","res","console","log","ok","status","json","data","err","errors","msg","catch","children","className","onSubmit","htmlFor","required","value","onChange","target","type","placeholder","id","name"],"sources":["/Users/sergio/Documents/Classes/CS-415/cs415_project/website/src/Components/AddGenre.jsx"],"sourcesContent":["import React, {useState} from \"react\";\n//import { useNavigate } from \"react-router-dom\"\n\nexport const AddGenre = (props) => {\n    //const navigate = useNavigate();\n    const [genre, setGenre] = useState('');\n    const [error, setError] = useState('');\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        setError(null)\n        let success = true\n        let errorText = ''\n\n        const payload = JSON.stringify({\n            genre: genre,\n        })\n        try {\n            fetch('http://localhost:8000/genre/',{\n            method: 'POST',\n            body: payload,\n            headers:{\n                'Content-Type': 'application/json'\n                }\n            }).then(res => {\n                    console.log(res)\n                    if (!res.ok){\n                        errorText = \"Error: \" + res.status + ' - '\n                        success = false\n                        return res.json()\n                    }\n                    else {\n                        success = true\n                        return res.json()\n                    }\n                 }\n              ).then(data => {\n                if (!success) {\n                    for (const err in data.errors){\n                    for (const msg in data.errors[err]) errorText += data.errors[err][msg]\n                    }\n                    console.log(errorText)\n                    setError(errorText)\n                }\n\n            })\n            .catch(error => {\n                success = false\n                console.error(error)\n            });\n            if (success) {\n                setGenre('')\n                setError('Genre Added!')\n            }\n            else{\n                setError(errorText)\n            }\n        } catch (error) {\n            console.error(error);\n            setError('Error Adding Genre - Check Yo Info!')\n        }\n\n    }\n\n    return (\n        <div >\n        <h2>Add Genre</h2>\n        <form className=\"register-form\" onSubmit={handleSubmit}>\n            <label htmlFor=\"genre\">Genre</label>\n            <input required value={genre} onChange={(e) => setGenre(e.target.value)} type=\"text\" placeholder=\"i.e. Action, Comedy\" id=\"genre\" name=\"genre\"/>\n            \n            <button type=\"submit\">Submit</button>\n            <p className=\"text-success\"><b>{error}</b></p>\n        </form>\n    </div>\n    )\n}\n\nexport default AddGenre;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}