{"ast":null,"code":"var _jsxFileName = \"/Users/sergio/Documents/Classes/CS-415/cs415_project/website/src/Components/MovieList.jsx\",\n  _s = $RefreshSig$();\n// import React, {useState, useEffect} from 'react'\n// import { useNavigate } from \"react-router-dom\"\n\n// const MovieList = () => {\n//   const navigate = useNavigate();\n//   const [pageName, setPageName] = useState('')\n//   const [pageTitle, setPageTitle] = useState('')\n//   const [pageDescription, setPageDescription] = useState('')\n\n//   useEffect(() => {\n//     if (!window.sessionStorage.getItem(\"auth\")) navigate('/unauthorized')\n//     fetch('http://localhost:8000/movies/')\n//     .then(res => res.json())\n//     .then(data => {\n//         console.log(data)\n//         setPageName(data.page.page_name)\n//         setPageTitle(data.page.page_title)\n//         setPageDescription(data.page.page_description)\n//     })\n//     .catch(error => console.error(error));\n// }, []);\n\n//   return (\n//     <div>\n\n//       <h1>Movie Database</h1>\n//       <p><font color=\"white\">This is only accessible when logged in</font></p>\n\n//         <h2>{pageName}</h2>\n//         <p><b>{pageTitle}</b></p>\n//         <p><font color='white'>{pageDescription}</font></p>\n//     </div>\n\n//   )\n// }\n\n// export default MovieList\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieList = () => {\n  _s();\n  const navigate = useNavigate();\n  const [movies, setMovies] = useState([]); // Added state to store movies\n\n  useEffect(() => {\n    if (!window.sessionStorage.getItem(\"auth\")) navigate('/unauthorized');\n    fetch('http://localhost:8000/api/movies') // Adjust this to your actual API endpoint\n    .then(res => res.json()).then(data => {\n      setMovies(data.movies); // Assuming the JSON has a movies field\n    }).catch(error => console.error(error));\n  }, [navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CS415 Private Page - Movie Database\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"font\", {\n        color: \"white\",\n        children: \"This is only accessible when logged in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Director: \", movie.director]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Release Date: \", movie.release_date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Rating: \", movie.rating]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, movie.movie_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieList, \"0eBNP2y3OLfBVg1NqBOl5AMZMH8=\", false, function () {\n  return [useNavigate];\n});\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","MovieList","_s","navigate","movies","setMovies","window","sessionStorage","getItem","fetch","then","res","json","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","color","map","movie","title","director","release_date","rating","movie_id","_c","$RefreshReg$"],"sources":["/Users/sergio/Documents/Classes/CS-415/cs415_project/website/src/Components/MovieList.jsx"],"sourcesContent":["// import React, {useState, useEffect} from 'react'\n// import { useNavigate } from \"react-router-dom\"\n\n// const MovieList = () => {\n//   const navigate = useNavigate();\n//   const [pageName, setPageName] = useState('')\n//   const [pageTitle, setPageTitle] = useState('')\n//   const [pageDescription, setPageDescription] = useState('')\n\n//   useEffect(() => {\n//     if (!window.sessionStorage.getItem(\"auth\")) navigate('/unauthorized')\n//     fetch('http://localhost:8000/movies/')\n//     .then(res => res.json())\n//     .then(data => {\n//         console.log(data)\n//         setPageName(data.page.page_name)\n//         setPageTitle(data.page.page_title)\n//         setPageDescription(data.page.page_description)\n//     })\n//     .catch(error => console.error(error));\n// }, []);\n\n//   return (\n//     <div>\n\n//       <h1>Movie Database</h1>\n//       <p><font color=\"white\">This is only accessible when logged in</font></p>\n\n//         <h2>{pageName}</h2>\n//         <p><b>{pageTitle}</b></p>\n//         <p><font color='white'>{pageDescription}</font></p>\n//     </div>\n\n//   )\n// }\n\n// export default MovieList\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from \"react-router-dom\";\n\nconst MovieList = () => {\n  const navigate = useNavigate();\n  const [movies, setMovies] = useState([]); // Added state to store movies\n\n  useEffect(() => {\n    if (!window.sessionStorage.getItem(\"auth\")) navigate('/unauthorized');\n    fetch('http://localhost:8000/api/movies') // Adjust this to your actual API endpoint\n      .then(res => res.json())\n      .then(data => {\n        setMovies(data.movies); // Assuming the JSON has a movies field\n      })\n      .catch(error => console.error(error));\n  }, [navigate]);\n\n  return (\n    <div>\n      <h1>CS415 Private Page - Movie Database</h1>\n      <p><font color=\"white\">This is only accessible when logged in</font></p>\n      {/* Render movies here */}\n      <div>\n        {movies.map(movie => (\n          <div key={movie.movie_id}>\n            <h2>{movie.title}</h2>\n            <p>Director: {movie.director}</p>\n            <p>Release Date: {movie.release_date}</p>\n            <p>Rating: {movie.rating}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default MovieList\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}