{"ast":null,"code":"var _jsxFileName = \"/Users/sergio/Documents/Classes/CS-415/cs415_website/cs415_website/src/Components/AddGenre.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n//import { useNavigate } from \"react-router-dom\"\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddGenre = props => {\n  _s();\n  //const navigate = useNavigate();\n  const [genre, setGenre] = useState('');\n  const [error, setError] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    setError(null);\n    let success = true;\n    let errorText = '';\n    const payload = JSON.stringify({\n      genre: genre\n    });\n    try {\n      fetch(process.env.REACT_APP_API_URL_BASE + '/genre/', {\n        method: 'POST',\n        body: payload,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        console.log(res);\n        if (!res.ok) {\n          errorText = \"Error: \" + res.status + ' - ';\n          success = false;\n          return res.json();\n        } else {\n          success = true;\n          return res.json();\n        }\n      }).then(data => {\n        if (!success) {\n          for (const err in data.errors) {\n            for (const msg in data.errors[err]) errorText += data.errors[err][msg];\n          }\n          console.log(errorText);\n          setError(errorText);\n        }\n      }).catch(error => {\n        success = false;\n        console.error(error);\n      });\n      if (success) {\n        setGenre('');\n        setError('Genre Added!');\n      } else {\n        setError(errorText);\n      }\n    } catch (error) {\n      console.error(error);\n      setError('Error Adding Genre - Check Yo Info!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Genre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"register-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"genre\",\n        children: \"Genre\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        value: genre,\n        onChange: e => setGenre(e.target.value),\n        type: \"text\",\n        placeholder: \"i.e. Action, Comedy\",\n        id: \"genre\",\n        name: \"genre\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-success\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(AddGenre, \"vfvzJcUH2pNuVfPpTw2pTPg3v+o=\");\n_c = AddGenre;\nexport default AddGenre;\nvar _c;\n$RefreshReg$(_c, \"AddGenre\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AddGenre","props","_s","genre","setGenre","error","setError","handleSubmit","e","preventDefault","success","errorText","payload","JSON","stringify","fetch","process","env","REACT_APP_API_URL_BASE","method","body","headers","then","res","console","log","ok","status","json","data","err","errors","msg","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","htmlFor","required","value","onChange","target","type","placeholder","id","name","_c","$RefreshReg$"],"sources":["/Users/sergio/Documents/Classes/CS-415/cs415_website/cs415_website/src/Components/AddGenre.jsx"],"sourcesContent":["import React, {useState} from \"react\";\n//import { useNavigate } from \"react-router-dom\"\n\nexport const AddGenre = (props) => {\n    //const navigate = useNavigate();\n    const [genre, setGenre] = useState('');\n    const [error, setError] = useState('');\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        setError(null)\n        let success = true\n        let errorText = ''\n\n        const payload = JSON.stringify({\n            genre: genre,\n        })\n        try {\n            fetch(process.env.REACT_APP_API_URL_BASE + '/genre/',{\n            method: 'POST',\n            body: payload,\n            headers:{\n                'Content-Type': 'application/json'\n                }\n            }).then(res => {\n                    console.log(res)\n                    if (!res.ok){\n                        errorText = \"Error: \" + res.status + ' - '\n                        success = false\n                        return res.json()\n                    }\n                    else {\n                        success = true\n                        return res.json()\n                    }\n                 }\n              ).then(data => {\n                if (!success) {\n                    for (const err in data.errors){\n                    for (const msg in data.errors[err]) errorText += data.errors[err][msg]\n                    }\n                    console.log(errorText)\n                    setError(errorText)\n                }\n\n            })\n            .catch(error => {\n                success = false\n                console.error(error)\n            });\n            if (success) {\n                setGenre('')\n                setError('Genre Added!')\n            }\n            else{\n                setError(errorText)\n            }\n        } catch (error) {\n            console.error(error);\n            setError('Error Adding Genre - Check Yo Info!')\n        }\n\n    }\n\n    return (\n        <div >\n        <h2>Add Genre</h2>\n        <form className=\"register-form\" onSubmit={handleSubmit}>\n            <label htmlFor=\"genre\">Genre</label>\n            <input required value={genre} onChange={(e) => setGenre(e.target.value)} type=\"text\" placeholder=\"i.e. Action, Comedy\" id=\"genre\" name=\"genre\"/>\n            \n            <button type=\"submit\">Submit</button>\n            <p className=\"text-success\"><b>{error}</b></p>\n        </form>\n    </div>\n    )\n}\n\nexport default AddGenre;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}