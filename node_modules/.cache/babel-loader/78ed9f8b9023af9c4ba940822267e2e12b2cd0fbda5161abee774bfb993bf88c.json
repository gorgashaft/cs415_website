{"ast":null,"code":"var _jsxFileName = \"/Users/sergio/Documents/Classes/CS-415/cs415_project/website/src/Components/AddGenre.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddGenre = props => {\n  _s();\n  const navigate = useNavigate();\n  const [value, setValue] = useState('');\n  const [comments, setComments] = useState('');\n  const [error, setError] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    setError(null);\n    let success = true;\n    let errorText = '';\n    const payload = JSON.stringify({\n      value: value,\n      comments: comments\n    });\n    try {\n      fetch('http://localhost:8000/genre/', {\n        method: 'POST',\n        body: payload,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        console.log(res);\n        if (!res.ok) {\n          errorText = \"Error: \" + res.status + ' - ';\n          success = false;\n          return res.json();\n        } else {\n          success = true;\n          return res.json();\n        }\n      }).then(data => {\n        if (!success) {\n          for (const err in data.errors) {\n            for (const msg in data.errors[err]) errorText += data.errors[err][msg];\n          }\n          console.log(errorText);\n          setError(errorText);\n        }\n      }).catch(error => {\n        success = false;\n        console.error(error);\n      });\n      if (success) {\n        setValue('');\n        setComments('');\n        setError('Rating Added!');\n      } else {\n        setError(errorText);\n      }\n    } catch (error) {\n      console.error(error);\n      setError('Error Adding Rating - Check Yo Info!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"register-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"value\",\n        children: \"User Rating\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        value: value,\n        onChange: e => setValue(e.target.value),\n        type: \"int\",\n        placeholder: \"1-Horrid, 10-Incredible\",\n        id: \"value\",\n        name: \"value\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"comments\",\n        children: \"User Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        value: comments,\n        onChange: e => setComments(e.target.value),\n        type: \"text\",\n        placeholder: \"Comments\",\n        id: \"comments\",\n        name: \"comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-success\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_s(AddGenre, \"NUGlgklZeiASx+3MZ5WbM7lNzDk=\", false, function () {\n  return [useNavigate];\n});\n_c = AddGenre;\nexport default AddGenre;\nvar _c;\n$RefreshReg$(_c, \"AddGenre\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","AddGenre","props","_s","navigate","value","setValue","comments","setComments","error","setError","handleSubmit","e","preventDefault","success","errorText","payload","JSON","stringify","fetch","method","body","headers","then","res","console","log","ok","status","json","data","err","errors","msg","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","htmlFor","required","onChange","target","type","placeholder","id","name","_c","$RefreshReg$"],"sources":["/Users/sergio/Documents/Classes/CS-415/cs415_project/website/src/Components/AddGenre.jsx"],"sourcesContent":["import React, {useState} from \"react\";\nimport { useNavigate } from \"react-router-dom\"\n\nexport const AddGenre = (props) => {\n    const navigate = useNavigate();\n    const [value, setValue] = useState('');\n    const [comments, setComments] = useState('');\n    const [error, setError] = useState('');\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        setError(null)\n        let success = true\n        let errorText = ''\n\n        const payload = JSON.stringify({\n            value: value,\n            comments: comments,\n        })\n        try {\n            fetch('http://localhost:8000/genre/',{\n            method: 'POST',\n            body: payload,\n            headers:{\n                'Content-Type': 'application/json'\n                }\n            }).then(res => {\n                    console.log(res)\n                    if (!res.ok){\n                        errorText = \"Error: \" + res.status + ' - '\n                        success = false\n                        return res.json()\n                    }\n                    else {\n                        success = true\n                        return res.json()\n                    }\n                 }\n              ).then(data => {\n                if (!success) {\n                    for (const err in data.errors){\n                    for (const msg in data.errors[err]) errorText += data.errors[err][msg]\n                    }\n                    console.log(errorText)\n                    setError(errorText)\n                }\n\n            })\n            .catch(error => {\n                success = false\n                console.error(error)\n            });\n            if (success) {\n                setValue('')\n                setComments('')\n                setError('Rating Added!')\n            }\n            else{\n                setError(errorText)\n            }\n        } catch (error) {\n            console.error(error);\n            setError('Error Adding Rating - Check Yo Info!')\n        }\n\n    }\n\n    return (\n        <div >\n            <h2>Register</h2>\n            <form className=\"register-form\" onSubmit={handleSubmit}>\n                <label htmlFor=\"value\">User Rating</label>\n                <input required value={value} onChange={(e) => setValue(e.target.value)} type=\"int\" placeholder=\"1-Horrid, 10-Incredible\" id=\"value\" name=\"value\"/>\n                \n                <label htmlFor=\"comments\">User Comments</label>\n                <input required value={comments} onChange={(e) => setComments(e.target.value)} type=\"text\" placeholder=\"Comments\" id=\"comments\" name=\"comments\"/>\n                \n                <button type=\"submit\">Submit</button>\n                \n                <p className=\"text-success\"><b>{error}</b></p>\n            </form>\n        </div>\n    )\n}\n\nexport default AddGenre;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}