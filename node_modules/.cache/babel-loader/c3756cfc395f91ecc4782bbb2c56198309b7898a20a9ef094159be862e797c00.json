{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{useNavigate}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export const AddRating=props=>{const navigate=useNavigate();const[value,setValue]=useState('');const[comments,setComment]=useState('');const[movieId,setMovieId]=useState('');const[userId,setUserId]=useState('');const[movies,setMovies]=useState([]);const[users,setUser]=useState([]);const[error,setError]=useState('');// console.log(users);\nconsole.log(userId);// Fetch Movie Title\nuseEffect(()=>{fetch(process.env.REACT_APP_API_URL_BASE+'/movies/').then(response=>response.json()).then(data=>setMovies(data.Movies)).catch(error=>console.error(\"Failed to load \",error));},[]);// Fetch User (First Name)\nuseEffect(()=>{fetch(process.env.REACT_APP_API_URL_BASE+'/users/').then(response=>response.json()).then(data=>setUser(data.Users)).catch(error=>console.error(\"Failed to load first name\",error));},[]);const handleSubmit=e=>{e.preventDefault();setError(null);let success=true;let errorText='';const payload=JSON.stringify({value,comments,movieId,userId});fetch(process.env.REACT_APP_API_URL_BASE+'/ratings/',{method:'POST',body:payload,headers:{'Content-Type':'application/json'}}).then(res=>{if(!res.ok){success=false;return res.text().then(text=>{throw new Error(text);});}return res.json();}).then(()=>{if(success){// Reset form on success\nsetValue('');setComment('');setMovieId('');setUserId('');setError('Rating Successfully Entered!');}}).catch(error=>{console.error(error);setError('Error Registering - Check your information and try again');});};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"New Rating Entry\"}),/*#__PURE__*/_jsxs(\"form\",{className:\"register-form\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"value\",children:\"Rating\"}),/*#__PURE__*/_jsx(\"input\",{required:true,value:value,onChange:e=>setValue(e.target.value),type:\"text\",placeholder:\"1-Horrid, 10-Amazing\",id:\"value\",name:\"value\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"comments\",children:\"Comments\"}),/*#__PURE__*/_jsx(\"input\",{required:true,value:comments,onChange:e=>setComment(e.target.value),type:\"text\",placeholder:\"Comments\",id:\"comments\",name:\"comments\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"movies\",children:\"Movie\"}),/*#__PURE__*/_jsxs(\"select\",{required:true,value:movieId,onChange:e=>setMovieId(e.target.value),id:\"movies\",name:\"movies\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Movie\"}),movies.map(title=>/*#__PURE__*/_jsx(\"option\",{value:title.movie_id,children:title.title},title.movie_id))]}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"first_name\",children:\"User\"}),/*#__PURE__*/_jsxs(\"select\",{required:true,value:userId,onChange:e=>setUserId(e.target.value),id:\"first_name\",name:\"first_name\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select User\"}),users.map(first_name=>/*#__PURE__*/_jsx(\"option\",{value:first_name.user_id,children:first_name.first_name},first_name.user_id))]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Submit\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-success\",children:/*#__PURE__*/_jsx(\"b\",{children:error})})]})]});};export default AddRating;// import React, {useState} from \"react\";\n// //import { useNavigate } from \"react-router-dom\"\n// export const AddRating = (props) => {\n//     //const navigate = useNavigate();\n//     const [value, setValue] = useState('');\n//     const [comments, setComments] = useState('');\n//     const [error, setError] = useState('');\n//     const handleSubmit = (e) => {\n//         e.preventDefault();\n//         setError(null)\n//         let success = true\n//         let errorText = ''\n//         const payload = JSON.stringify({\n//             value: value,\n//             comments: comments,\n//         })\n//         try {\n//             fetch(process.env.REACT_APP_API_URL_BASE + '/ratings/',{\n//             method: 'POST',\n//             body: payload,\n//             headers:{\n//                 'Content-Type': 'application/json'\n//                 }\n//             }).then(res => {\n//                     console.log(res)\n//                     if (!res.ok){\n//                         errorText = \"Error: \" + res.status + ' - '\n//                         success = false\n//                         return res.json()\n//                     }\n//                     else {\n//                         success = true\n//                         return res.json()\n//                     }\n//                  }\n//               ).then(data => {\n//                 if (!success) {\n//                     for (const err in data.errors){\n//                     for (const msg in data.errors[err]) errorText += data.errors[err][msg]\n//                     }\n//                     console.log(errorText)\n//                     setError(errorText)\n//                 }\n//             })\n//             .catch(error => {\n//                 success = false\n//                 console.error(error)\n//             });\n//             if (success) {\n//                 setValue('')\n//                 setComments('')\n//                 setError('User Rating Added!')\n//             }\n//             else{\n//                 setError(errorText)\n//             }\n//         } catch (error) {\n//             console.error(error);\n//             setError('Error Adding Rating - Check Yo Data and Try Again Fool!')\n//         }\n//     }\n//     return (\n//         <div >\n//         <h2>Add User Rating</h2>\n//         <form className=\"register-form\" onSubmit={handleSubmit}>\n//             <label htmlFor=\"value\">User Rating</label>\n//             <input required value={value} onChange={(e) => setValue(e.target.value)} type=\"int\" placeholder=\"1-Horrid, 10-Incredible\" id=\"value\" name=\"value\"/>\n//             <label htmlFor=\"comments\">User Comments</label>\n//             <input required value={comments} onChange={(e) => setComments(e.target.value)} type=\"text\" placeholder=\"Comments\" id=\"comments\" name=\"comments\"/>\n//             <button type=\"submit\">Submit</button>\n//             <p className=\"text-success\"><b>{error}</b></p>\n//         </form>\n//     </div>\n//     )\n// }\n// export default AddRating","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsx","_jsx","jsxs","_jsxs","AddRating","props","navigate","value","setValue","comments","setComment","movieId","setMovieId","userId","setUserId","movies","setMovies","users","setUser","error","setError","console","log","fetch","process","env","REACT_APP_API_URL_BASE","then","response","json","data","Movies","catch","Users","handleSubmit","e","preventDefault","success","errorText","payload","JSON","stringify","method","body","headers","res","ok","text","Error","children","className","onSubmit","htmlFor","required","onChange","target","type","placeholder","id","name","map","title","movie_id","first_name","user_id"],"sources":["/Users/sergio/Documents/Classes/CS-415/cs415_website/cs415_website/src/Components/AddRating.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport const AddRating = (props) => {\n    const navigate = useNavigate();\n    const [value, setValue] = useState('');\n    const [comments, setComment] = useState('');\n    const [movieId, setMovieId] = useState('');\n    const [userId, setUserId] = useState('');\n    const [movies, setMovies] = useState([]);\n    const [users, setUser] = useState([]);\n    const [error, setError] = useState('');\n\n    // console.log(users);\n    console.log(userId);\n\n    // Fetch Movie Title\n    useEffect(() => {\n        fetch(process.env.REACT_APP_API_URL_BASE + '/movies/')\n            .then(response => response.json())\n            .then(data => setMovies(data.Movies))\n            .catch(error => console.error(\"Failed to load \", error));\n    }, []);\n\n    // Fetch User (First Name)\n    useEffect(() => {\n        fetch(process.env.REACT_APP_API_URL_BASE + '/users/')\n            .then(response => response.json())\n            .then(data => setUser(data.Users))\n            .catch(error => console.error(\"Failed to load first name\", error));\n    }, []);    \n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        setError(null);\n        let success = true;\n        let errorText = '';\n\n        const payload = JSON.stringify({\n            value,\n            comments,\n            movieId,\n            userId\n        });\n\n        fetch(process.env.REACT_APP_API_URL_BASE + '/ratings/', {\n            method: 'POST',\n            body: payload,\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        })\n        .then(res => {\n            if (!res.ok) {\n                success = false;\n                return res.text().then(text => { throw new Error(text) });\n            }\n            return res.json();\n        })\n        .then(() => {\n            if (success) {\n                // Reset form on success\n                setValue('');\n                setComment('');\n                setMovieId('');\n                setUserId('');\n                setError('Rating Successfully Entered!');\n            }\n        })\n        .catch(error => {\n            console.error(error);\n            setError('Error Registering - Check your information and try again');\n        });\n    };\n\n    return (\n        <div>\n            <h2>New Rating Entry</h2>\n            <form className=\"register-form\" onSubmit={handleSubmit}>\n                {/* Existing Fields */}\n\n                <label htmlFor=\"value\">Rating</label>\n                <input required value={value} onChange={e => setValue(e.target.value)} type=\"text\" placeholder=\"1-Horrid, 10-Amazing\" id=\"value\" name=\"value\"/>\n\n                <label htmlFor=\"comments\">Comments</label>\n                <input required value={comments} onChange={e => setComment(e.target.value)} type=\"text\" placeholder=\"Comments\" id=\"comments\" name=\"comments\"/>\n\n                {/* Movie Title Drop-down */}\n                <label htmlFor=\"movies\">Movie</label>\n                <select required value={movieId} onChange={e => setMovieId(e.target.value)} id=\"movies\" name=\"movies\">\n                    <option value=\"\">Movie</option>\n                    {movies.map(title => (\n                        <option key={title.movie_id} value={title.movie_id}>{title.title}</option>\n                    ))}\n                </select>\n\n                {/* User First Name Drop-down */}\n                <label htmlFor=\"first_name\">User</label>\n                <select required value={userId} onChange={e => setUserId(e.target.value)} id=\"first_name\" name=\"first_name\">\n                    <option value=\"\">Select User</option>\n                    {users.map(first_name => (\n                        <option key={first_name.user_id} value={first_name.user_id}>{first_name.first_name}</option>\n                    ))}\n                </select>\n\n                <button type=\"submit\">Submit</button>\n                <p className=\"text-success\"><b>{error}</b></p>\n            </form>\n        </div>\n    );\n}\n\nexport default AddRating;\n\n// import React, {useState} from \"react\";\n// //import { useNavigate } from \"react-router-dom\"\n\n// export const AddRating = (props) => {\n//     //const navigate = useNavigate();\n//     const [value, setValue] = useState('');\n//     const [comments, setComments] = useState('');\n//     const [error, setError] = useState('');\n\n//     const handleSubmit = (e) => {\n//         e.preventDefault();\n//         setError(null)\n//         let success = true\n//         let errorText = ''\n\n//         const payload = JSON.stringify({\n//             value: value,\n//             comments: comments,\n//         })\n//         try {\n//             fetch(process.env.REACT_APP_API_URL_BASE + '/ratings/',{\n//             method: 'POST',\n//             body: payload,\n//             headers:{\n//                 'Content-Type': 'application/json'\n//                 }\n//             }).then(res => {\n//                     console.log(res)\n//                     if (!res.ok){\n//                         errorText = \"Error: \" + res.status + ' - '\n//                         success = false\n//                         return res.json()\n//                     }\n//                     else {\n//                         success = true\n//                         return res.json()\n//                     }\n//                  }\n//               ).then(data => {\n//                 if (!success) {\n//                     for (const err in data.errors){\n//                     for (const msg in data.errors[err]) errorText += data.errors[err][msg]\n//                     }\n//                     console.log(errorText)\n//                     setError(errorText)\n//                 }\n\n//             })\n//             .catch(error => {\n//                 success = false\n//                 console.error(error)\n//             });\n//             if (success) {\n//                 setValue('')\n//                 setComments('')\n//                 setError('User Rating Added!')\n//             }\n//             else{\n//                 setError(errorText)\n//             }\n//         } catch (error) {\n//             console.error(error);\n//             setError('Error Adding Rating - Check Yo Data and Try Again Fool!')\n//         }\n\n//     }\n\n//     return (\n//         <div >\n//         <h2>Add User Rating</h2>\n//         <form className=\"register-form\" onSubmit={handleSubmit}>\n//             <label htmlFor=\"value\">User Rating</label>\n//             <input required value={value} onChange={(e) => setValue(e.target.value)} type=\"int\" placeholder=\"1-Horrid, 10-Incredible\" id=\"value\" name=\"value\"/>\n            \n//             <label htmlFor=\"comments\">User Comments</label>\n//             <input required value={comments} onChange={(e) => setComments(e.target.value)} type=\"text\" placeholder=\"Comments\" id=\"comments\" name=\"comments\"/>\n            \n//             <button type=\"submit\">Submit</button>\n            \n//             <p className=\"text-success\"><b>{error}</b></p>\n//         </form>\n//     </div>\n//     )\n// }\n\n// export default AddRating"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}